#ФУНКЦИЯ И РЕКУРСИЯ

#1.
#Даны четыре действительных числа: x1, y1, x2, y2. Напишите функцию
#distance(x1, y1, x2, y2), вычисляющая расстояние между точкой (x1,y1) и (x2,y2).
#Считайте четыре действительных числа и выведите результат работы этой функции.
#Если вы не знаете, как решить эту задачу, то вы, возможно, не изучали в школе
#теорему Пифагора. Попробуйте прочитать о ней на Википедии.

def distanse(x1,y1,x2,y2):
    from math import sqrt
    res=0
    res=sqrt((abs(x1-x2)**2)+((y1-y2)**2))
    return res
print(distanse(0,0,1,1),'\n')

#2.
#Отрицательная степень
#Дано действительное положительное число a и целоe число n.
#Вычислите an. Решение оформите в виде функции power(a, n).
#Стандартной функцией возведения в степень пользоваться нельзя.

def power(a,n):
    res=a**n
    return res
print(power(2,-3),'\n')

#3.
#Большие буквы»
#Напишите функцию capitalize(), которая принимает слово из маленьких латинских
#букв и возвращает его же, меняя первую букву на большую.
#Например, print(capitalize('word')) должно печатать слово Word.
#На вход подаётся строка, состоящая из слов, разделённых одним пробелом.
#Слова состоят из маленьких латинских букв. Напечатайте исходную строку,
#сделав так, чтобы каждое слово начиналось с большой буквы. При этом
#используйте вашу функцию capitalize().
#Напомним, что в Питоне есть функция ord(), которая по символу возвращает его
#код в таблице ASCII, и функция chr(), которая по коду символа возвращает сам
#символ. Например, ord('a') == 97, chr(97) == 'a'.

#МОЁ:
def capitalize(a):
    a,n,m=str(a),-1,-1
    for i in a:
        n+=1
        if n==m:
            print(i.upper(),end='')
        if i==' ':
            m=n+1
        if n==0:
            print(i.upper(),end='')
        else:
            if n!=m:print(i,end='')
    return ''
print(capitalize('de noche todos los gatos son pardos'))

#ЧУЖОЕ:
def capitalize(word):
    first_letter_small = word[0]
    first_letter_big = chr(ord(first_letter_small) - ord('a') + ord('A'))
    return first_letter_big + word[1:]
source = input().split()
res = []
for word in source:
    res.append(capitalize(word))
print(' '.join(res),'\n')

#4.
#Возведение в степень
#Дано действительное положительное число a и целое неотрицательное число n. 
#Вычислите an не используя циклы, возведение в степень через ** и функцию 
#math.pow(), а используя рекуррентное соотношение an=a⋅an-1.
#Решение оформите в виде функции power(a, n).

def power2(a,n):
    if n==n-1:
        return a
    res=a*power(a,n-1)
    return res
print(power2(2,2),'\n')

#5.
#Разворот последовательности
#Дана последовательность целых чисел, заканчивающаяся числом 0. Выведите эту 
#последовательность в обратном порядке.
#При решении этой задачи нельзя пользоваться массивами и прочими 
#динамическими структурами данных. Рекурсия вам поможет.

def reverse():
    x=int(input())
    if x!=0:
        reverse()
    print(x)
reverse()
print()

#6.
#Числа Фибоначчи
#Напишите функцию fib(n), которая по данному целому неотрицательному n
#возвращает n-e число Фибоначчи. В этой задаче нельзя использовать циклы —
#используйте рекурсию.

def fib(n):
    if n==1 or n==2:
        return 1
    else:
        return fib(n-1)+fib(n-2)
print(fib(6))































