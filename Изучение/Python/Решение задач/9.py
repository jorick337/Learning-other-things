#МНОЖЕСТВА

#1.
#Количество различных чисел
#Дан список чисел. Определите, сколько в нем встречается различных чисел.
#Примечание. Эту задачу на Питоне можно решить в одну строчку.

print(len(set([int(i) for i in input().split()])))

#2.
#Количество совпадающих чисел
#Даны два списка чисел. Посчитайте, сколько чисел содержится одновременно как в
#первом списке, так и во втором.
#Примечание. Эту задачу на Питоне можно решить в одну строчку.

print(len(set([int(i) for i in input().split()]) & set([int(i) for i in input().split()]) ),'\n')

#3.
#Пересечение множеств
#Даны два списка чисел. Найдите все числа, которые входят как в первый, так и во
#второй список и выведите их в порядке возрастания.
#Примечание. И даже эту задачу на Питоне можно решить в одну строчку.

print(*sorted(set([int(i) for i in input().split()])& set([int(i) for i in input().split()]),key=int),'\n')

#4.
#Встречалось ли число раньше
#Во входной строке записана последовательность чисел через пробел. Для каждого 
#числа выведите слово YES (в отдельной строке), если это число ранее встречалось
#в последовательности или NO, если не встречалось.

a=[int(i) for i in input().split()]
b=set()
for i in a:
    if i in b:
        print('YES')
    else:
        print('NO')
        b.add(i)
        print(b)
print('\n')

#5.
#Кубики
#Аня и Боря любят играть в разноцветные кубики, причем у каждого из них свой
#набор и в каждом наборе все кубики различны по цвету. Однажды дети
#заинтересовались, сколько существуют цветов таких, что кубики каждого цвета
#присутствуют в обоих наборах. Для этого они занумеровали все цвета случайными
#числами от 0 до 10 ^ 8. На этом их энтузиазм иссяк, поэтому вам предлагается
#помочь им в оставшейся части.
#В первой строке входных данных записаны числа N и M — число кубиков у Ани и
#Бори. В следующих N строках заданы номера цветов кубиков Ани. В последних M
#строках номера цветов Бори.
#Найдите три множества: номера цветов кубиков, которые есть в обоих наборах;
#номера цветов кубиков, которые есть только у Ани и номера цветов кубиков,
#которые есть только у Бори. Для каждого из множеств выведите сначала количество
#элементов в нем, а затем сами элементы, отсортированные по возрастанию.
n,m=[int(i) for i in input().split()]
a,b=set([input() for i in range(n)]),set([input() for i in range(m)])
print(len(a&b))
print(*sorted(a&b,key=int))
print(len(a-b))
print(*sorted(a-b,key=int))
print(len(b-a))
print(*sorted(b-a,key=int))

#6.
#Количество слов в тексте
#Дан текст: в первой строке записано число строк, далее идут сами строки. 
#Определите, сколько различных слов содержится в этом тексте.
#Словом считается последовательность непробельных символов идущих подряд, 
#слова разделены одним или большим числом пробелов или символами конца 
#строки.

def text(n):
    a=set()
    for i in range(n):
        a.update(input().split())
    return len(a)
print(text(0),'\n')

#7.
#УГАДАЙ ЧИСЛО
#Август и Беатриса играют в игру. Август загадал натуральное число от 1 до n.
#Беатриса пытается угадать это число, для этого она называет некоторые множества
#натуральных чисел. Август отвечает Беатрисе YES, если среди названных ей чисел
#есть задуманное или NO в противном случае. После нескольких заданныъх вопросов
#Беатриса запуталась в том, какие вопросы она задавала и какие ответы получила и
#просит вас помочь ей определить, какие числа мог задумать Август.
#В первой строке задано n - максимальное число, которое мог загадать Август.
#Далее каждая строка содержит вопрос Беатрисы (множество чисел, разделенных
#пробелом) и ответ Августа на этот вопрос.
#Вы должны вывести через пробел, в порядке возрастания, все числа, которые мог
#задумать Август.

n=10
a=set(range(1,n+1))
b=a
while True:
    break
    i=input()
    if i == 'HELP':
        break
    i={int(x) for x in i.split()}
    c=input()
    if c=='YES':
        b &=i
    else:
        b &=a-i
print(' '.join([str(x) for x in sorted(b)]),'\n')

#8.
#УГАДАЙ ЧИСЛО 2
#Август и Беатриса продолжают играть в игру, но Август начал жульничать. На
#каждый из вопросов Беатрисы он выбирает такой вариант ответа YES или NO, чтобы
#множество возможных задуманных чисел оставалось как можно больше. Например,
#если Август задумал число от 1 до 5, а Беатриса спросила про числа 1 и 2, то
#Август ответит NO, а если Беатриса спросит про 1, 2, 3, то Август ответит YES.
#Если же Бетриса в своем вопросе перечисляет ровно половину из задуманных чисел,
#то Август из вредности всегда отвечает NO. Наконец, Август при ответе
#учитывает все предыдущие вопросы Беатрисы и свои ответы на них, то есть
#множество возможных задуманных чисел уменьшается.
#Первая строка содержит наибольшее число, которое мог загадать Август. Каждая
#следующая строка содержит очередной вопрос Беатрисы: набор чисел, разделенных
#пробелами. Последняя строка входных данных содержит одно слово HELP.
#Для каждого вопроса Беатрисы выведите ответ Августа на этот вопрос. После этого
#выведите через пробел, в порядке возрастания, все числа, которые мог загадать
#Август после ответа на все вопросы Беатрисы.

n=10
a=set(range(1,n+1))
b=a
while True:
    break
    i=input()
    if i == 'HELP':
        break
    i={int(x) for x in i.split()}
    if len(b & i)>len(b)/2:
        print('YES')
        b&=i
    else:
        print('NO')
        b&=a-i
print(' '.join([str(x) for x in sorted(b)]),'\n')

#9.
#ПОЛИГЛОТЫ
#Каждый из некоторого множества школьников некоторой школы знает некоторое
#количество языков. Нужно определить сколько языков знают все школьники, и
#сколько языков знает хотя бы один из школьников.
#В первой строке задано количество школьников. Для каждого из школьников сперва
#записано количество языков, которое он знает, а затем - названия языков, по
#одному в строке.
#В первой строке выведите количество языков, которые знают все школьники.
#Начиная со второй строки - список таких языков. Затем - количество языков,
#которые знает хотя бы один школьник, на следующих строках - список таких языков.
#Языки нужно выводить в лексикографическом порядке, по одному на строке.

n,d,c=4,set(),set()
for i in range(n):
    break
    b=int(input())
    e=set([str(input()) for l in range(b)])
    d.update(e)
    if i>0:c&=e
    if i==0:c=e
print(len(c))
print('\n'.join(i for i in c))
print(len(d))
print('\n'.join(i for i in d))

#10.
#Забастовки
#Политическая жизнь одной страны очень оживленная. В стране действует K
#политических партий, каждая из которых регулярно объявляет национальную
#забастовку. Дни, когда хотя бы одна из партий объявляет забастовку, при условии,
#что это не суббота или воскресенье (когда и так никто не работает), наносят
#большой ущерб экономике страны.
#i-я партия объявляет забастовки строго каждые b_i дней, начиная с дня с номером
#a_i. То есть i-я партия объявляет забастовки в дни a_i, a_i + b_i, a_i + 2*
#* b_i и т.д. Если в какой-то день несколько партий объявляет забастовку, то это
#считается одной общенациональной забастовкой.
#В календаре страны N дней, пронумерованных, начиная с единицы. Первый день года
#является понедельником, шестой и седьмой дни года — выходные, неделя состоит из
#семи дней.
#В первой строке даны числа N и K. Далее идет K строк, описывающие графики
#проведения забастовок. i-я строка содержит числа a_i и b_i. Вам нужно определить
#число забастовок, произошедших в этой стране в течении года.

n,k=1000,1
obh_day,per=set(),[]
for i in range(k):
    a_i,b_i=[int(i) for i in input().split()]
    for l in range(a_i,n+1,b_i):
        if l%6!=0 and l%7!=0:
            per.append(l)
            obh_day.update(per)
print(len(obh_day))
        

    



































        
