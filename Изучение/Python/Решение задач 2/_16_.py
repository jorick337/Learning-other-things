#ООП-ОБЬЕКТНО ОРИЕНТИРОВАННОЕ ОРИЕНТИРОВАНИЕ:

class Person:#CLASS-СОЗДАЁТ КАКОЙ-ЛИБО КЛАСС,НАПРИМЕР,PERSON,КОТОРЫЙ ИМЕЕТ:
    name="Ivan"#ИМЯ-ИВАН
    age=10#ВОЗРАСТ-10

    def set(self,name,age):#SET-ЭТО МЕТОД(ТАК ПРИНЯТО НАЗЫВАТЬ)SELF-НЕОБХОДИМОСТЬ
        self.name=name #ЭТО ОЗНАЧАЕТ ТО,ЧТО ТЕПЕРЬ МЫ ПЕРЕДАЁМ ТОТ ПАРАМЕТР,КОТО-
        self.age=age #РЫЙ У НАС ЗАПИСАН В СКОБКАХ ПОСЛЕ SET

#СОЗДАЁМ НОВЫЙ ОБЬЕКТ В PERSON:

vlad=Person()#ЭТО НОВЫЙ ОБЬЕКТ В PERSON,КОТОРОМУ:
vlad.name="Влад"#ДАЮТ ЗНАЧЕНИЕ ИМЕНИ (ОБЬЕКТ.ЗНАЧЕНИЕ) ВЛАД
print(vlad.name)#ЗДЕСЬ ПИШУТ ЗНАЧЕНИЕ ОБЬЕКТА ВЛАД ПОД NAME В PERSON
print()

ivan=Person()#ЭТО НОВЫЙ ОБЬЕКТ В PERSON,КОТОРОМУ:
ivan.age=45#ДАЮТ ЗНАЧЕНИЕ ЛЕТ (ОБЬЕКТ.ЗНАЧЕНИЕ) 45
print(ivan.age)#ЗДЕСЬ ВЫВОДЯТ ЗНАЧЕНИЕ ОБЬЕКТА ПОД AGE В PERSON
print()
#КАК ИСПОЛЬЗОВАТЬ SET:

kosty=Person()#ОБАВЛЯЕМ ПЕРЕМЕННУЮ В PERSON 
kosty.set("Костя",25)#SET ПОЗВОЛЯЕТ БОЛЕЕ БЫСТРО ДАВАТЬ ЗНАЧЕНИЯ(NAME И AGE)
print(kosty.name+" "+str(kosty.age))#СНАЧАЛА ПИШЕТ ИМЯ KOSTY + ПРОПУСК(ПРОБЕЛ)+
print()#ВОЗРАСТ(ПРИВОДИМ К STRING ДЛЯ ТОГО,ЧТОБЫ НЕ БЫЛО ОШИБКИ,Т.К В AGE ЦИФРА)
